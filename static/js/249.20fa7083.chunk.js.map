{"version":3,"file":"static/js/249.20fa7083.chunk.js","mappings":"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","sources":["components/Modal/DeleteModal/DeleteModal.styled.jsx","components/Modal/DeleteModal/DeleteModal.jsx","components/Modal/Modal/Modal.styled.jsx","components/Modal/Modal/Modal.jsx","constants/index.js","components/RadioButtons/RadioFilter.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/MainDashboard/TasksColumn/TasksColumn.styled.jsx","components/Modal/CardModal/CardModal.styled.jsx","components/Modal/CardModal/CardPriorityList.jsx","components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/Modal/CardModal/CardAddModal.jsx","components/Modal/ColumnModal/ColumnModal.styled.jsx","components/Modal/ColumnModal/EditColumnModal.jsx","redux/cards/cards-selectors.js","components/MainDashboard/TasksCard/TasksCard.styled.jsx","helpers/dateFormat.js","components/Modal/CardModal/CardEditModal.jsx","components/MainDashboard/MovePopUp/MovePopUp.styled.jsx","components/MainDashboard/MovePopUp/MovePopUp.jsx","components/MainDashboard/TasksCard/TasksCard.jsx","components/MainDashboard/TasksCard/TasksCardList.styled.jsx","redux/filter/filter-selectors.js","components/MainDashboard/TasksCard/TasksCardList.jsx","components/MainDashboard/TasksColumn/TasksColumnItem.jsx","redux/column/column-selectors.js","components/MainDashboard/TasksColumn/TasksColumn.jsx","components/Modal/ColumnModal/ColumnModal.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.styled.jsx","components/MainDashboard/ButtonForColumn/ButtonForColumn.jsx","components/MainDashboard/MainDashboard.styled.jsx","components/MainDashboard/MainDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx","pages/ScreensPage/handleBackgorundChange.js","redux/boards/boards-selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 10px;\n`;\n\nexport const Title = styled.h4`\n  color: var(--icon-color);\n  font-size: 14px;\n  text-align: center;\n  font-weight: normal;\n  line-height: 1.5;\n  margin-bottom: 14px;\n`;\n\nexport const ConfirmButton = styled.button`\n  font-weight: 500;\n  font-size: 14px;\n  border-radius: 8px;\n  padding: 10px;\n  background-color: var(--additional-btn-bg-color);\n  color: var(--btn-icon-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: 350ms ease-in-out;\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n`;\n","import Modal from '../Modal/Modal';\nimport { Container, Title, ConfirmButton } from './DeleteModal.styled';\n\nconst DeleteModal = ({ onClose, onConfirm }) => {\n  const handleConfirm = () => {\n    onConfirm();\n    onClose(); \n  };\n  return (\n    <Modal width={335} height={200} onClose={onClose}>\n      <Container>\n        <Title>{'Are you sure you want to delete this?'}</Title>\n\n        <ConfirmButton type=\"button\" onClick={handleConfirm}>\n          {'Confirm'}\n        </ConfirmButton>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import styled from 'styled-components';\n\nexport const Opacity = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); \n  z-index: 9999; \n`;\n\n\n\n\n\nexport const Modalcont = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: center;\n  align-items: center;\n  min-height: 130px;\n  border-radius: 8px;\n  padding: 24px;\n  color: var(--primary-text-color);\n  background: var(--input-bg-color);\n  z-index: 10000; \n  width: ${({ $Width }) => $Width}px;\n`;\n\nexport const ModalClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  padding: 0;\n\n  @media screen and (min-width: 1440px) {\n    &:hover svg,\n    &:focus svg {\n      filter: drop-shadow(1px 1px 3px var(--additional-icon-color));\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport Icon from '../../Icon/Icon';\nimport { Opacity, Modalcont, ModalClose } from './Modal.styled';\n\nconst Modal = ({ children, width, height, onClose, developers = false }) => {\n  const modalRoot = document.getElementById('modal-root');\n\n  useEffect(() => {\n    const handleCloseKeyPress = event => {\n      if (event.code === 'Escape') onClose();\n    };\n    document.addEventListener('keydown', handleCloseKeyPress);\n\n    return () => document.removeEventListener('keydown', handleCloseKeyPress);\n  }, [onClose]);\n\n  return createPortal(\n    <Opacity onClick={onClose}>\n      <Modalcont\n        $developers={developers}\n        $Width={width}\n        $Height={height}\n        onClick={event => event.stopPropagation()}\n      >\n        <ModalClose type=\"button\" aria-label=\"Close modal\" onClick={onClose}>\n          <Icon\n            width={18}\n            height={18}\n            strokeColor={'var(--icon-color)'}\n            name={'close'}\n          />\n        </ModalClose>\n        {children}\n      </Modalcont>\n    </Opacity>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// export const CLOSE_KEY_CODE = 'Escape';\n\nexport const PRIORITY_LIST = [\n  { priority: 'low', color: '#8FA1D0' },\n  { priority: 'medium', color: '#E09CB5' },\n  { priority: 'high', color: '#BEDBB0' },\n  { priority: 'without', color: 'var(--btn-rad-without)' },\n];\n\nexport const ICONS_ARRAY = [\n  { id: 0, name: 'icon-board-fourCircles-1', label: 'project' },\n  { id: 1, name: 'icon-board-star-2', label: 'star' },\n  { id: 2, name: 'icon-board-loading-3', label: 'loading' },\n  { id: 3, name: 'icon-board-puzzle-4', label: 'puzzle-piece' },\n  { id: 4, name: 'icon-board-box-5', label: 'container' },\n  { id: 5, name: 'icon-board-lightning-6', label: 'lightning' },\n  { id: 6, name: 'icon-board-colors-7', label: 'colors' },\n  { id: 7, name: 'icon-board-hexagon-8', label: 'hexagon' },\n];\n\nexport const BACKGROUND_LIST = [\n  'default',\n  'air',\n  'ballons',\n  'canyon',\n  'abstract',\n  'clouds',\n  'magnolia',\n  'milkyway',\n  'moon',\n  'night',\n  'palm',\n  'rocks',\n  'sea',\n  'stars',\n  'tree',\n  'yacht',\n];\n\n\nexport const TOASTER = {\n  style: {\n    border: '2px solid #bedbb0',\n    backgroundColor: '#1f1f1f',\n    color: '#fff',\n    textAlign: 'center',\n  },\n  position: 'top-center',\n  duration: 1000,\n};\n","import React, { useState } from 'react';\nimport { Box, FormControlLabel, RadioGroup, Radio } from '@mui/material';\n\nconst RadioFilter = ({ onFilterChange, priority }) => {\n  const [selectedValue, setSelectedValue] = useState(priority || 'Without');\n  const radio = [\n    {\n      value: 'Without',\n      label: 'Without priority',\n      labelColor:\n        selectedValue === 'Without'\n          ? 'var(--additional-text-color)'\n          : 'var(--show-filter-txt)',\n      radioColor: {\n        static: 'var(--without-filter-lable)',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n    {\n      value: 'Low',\n      label: 'Low',\n      labelColor:\n        selectedValue === 'Low' ? '#8FA1D0' : 'var(--show-filter-txt)',\n      radioColor: {\n        static: '#8FA1D0',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n    {\n      value: 'Medium',\n      label: 'Medium',\n      labelColor:\n        selectedValue === 'Medium'\n          ? 'var(--mediumPriorityColor)'\n          : 'var(--show-filter-txt)',\n      radioColor: {\n        static: 'var(--mediumPriorityColor)',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n    {\n      value: 'High',\n      label: 'High',\n      labelColor:\n        selectedValue === 'High'\n          ? 'var(--highPriorityColor)'\n          : 'var(--show-filter-txt)',\n      radioColor: {\n        static: 'var(--highPriorityColor)',\n        onChecked: 'var( --additional-bg-color)',\n      },\n    },\n  ];\n\n  const handleRadioChange = event => {\n    const selectedPriority = event.target.value;\n    setSelectedValue(selectedPriority);\n    onFilterChange(selectedPriority);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flexStart',\n        width: '120px',\n      }}\n    >\n      <RadioGroup\n        aria-labelledby=\"radio-buttons-group-label\"\n        value={selectedValue}\n        name=\"radio-buttons-group\"\n        onChange={handleRadioChange}\n        sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}\n      >\n        {radio.map(button => {\n          const { value, label, labelColor, radioColor } = button;\n          return (\n            <FormControlLabel\n              key={value}\n              value={value}\n              sx={{\n                display: 'flex',\n                gap: '8px',\n                margin: '0',\n                height: '24px',\n                '& .MuiTypography-root': {\n                  fontFamily: 'Poppins',\n                  fontSize: '12px',\n                  color: labelColor,\n                },\n              }}\n              control={\n                <Radio\n                  sx={{\n                    width: '14px',\n                    height: '14px',\n                    color: 'transparent',\n                    backgroundColor: radioColor.static,\n                    '&.Mui-checked': {\n                      color: radioColor.static,\n                      backgroundColor: radioColor.onChecked,\n                    },\n                  }}\n                  disableRipple\n                />\n              }\n              label={label}\n            />\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n};\n\nexport default RadioFilter;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 252px;\n  // padding: 24px;\n  // box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--bg-theme);\n  border-radius: 8px;\n  position: relative;\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n\n  color:var(--additional-text-color);\n\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.hr`\n  border: none;\n  height: 1px;\n  background-color: var(--line-filter);\n  margin: 0;\n  margin-bottom: 14px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const LabelTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--additional-text-color);\n`;\n\nexport const ShowAllButton = styled.button`\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: var(--show-filter-txt);\n  border: none;\n  outline: none;\n  background-color: transparent;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: var(--additional-text-color-op);\n\n  }\n`;\n","import React, { useState } from 'react';\n// import ButtonClose from '../ButtonClose/ButtonClose.jsx';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice.js';\n\nimport RadioFilter from '../RadioButtons/RadioFilter.jsx';\nimport {\n  FilterWrapper,\n  Title,\n  Line,\n  TitleWrapper,\n  LabelTitle,\n  ShowAllButton,\n} from './Filter.styled.jsx';\n\nconst Filter = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [priority, setPriority] = useState('all');\n\n  const resetFilter = () => {\n    dispatch(setFilter('all'));\n    setPriority('all');\n  };\n\n  const handleFilterChange = priority => {\n    dispatch(setFilter(priority));\n    setPriority(priority);\n  };\n\n  return (\n    <FilterWrapper>\n      <Title>Filters</Title>\n      <Line />\n      <TitleWrapper>\n        <LabelTitle>Label color</LabelTitle>\n        <ShowAllButton onClick={resetFilter}>Show all</ShowAllButton>\n      </TitleWrapper>\n\n      <RadioFilter onFilterChange={handleFilterChange} priority={priority} />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContainerHeaderBoard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 10px;\n`;\n\nexport const TitleVilter = styled.h4`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--additional-text-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterText = styled.h4`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--additional-text-color);\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n  cursor: pointer;\n\n  &:hover {\n    stroke: #bedbb0;\n  }\n`;\nexport const FilterDiv = styled.div`\n  // display: flex;\n`;\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n`;\n","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\n import Filter from \"components/Filter/Filter.jsx\";\nimport { selectCurrentBoard } from '../../redux/boards/boards-selectors';\nimport {ContainerFilter,\n    FilterDiv,\n    FilterButton,\n    TitleVilter,\n    ContainerHeaderBoard,\n    FilterText,\n} from './HeaderDashboard.styled';\nimport Modal from 'components/Modal/Modal/Modal';\n\nconst HeaderDashboard = () => {\n    const currentBoard = useSelector(selectCurrentBoard);\n    const {title} = currentBoard;\n\n     const [openFilter, setOpenFilter] = useState(false);\n\n   const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n   const toggleFilter = () => {\n    setOpenFilter(!openFilter);\n  };\n\n    return(\n      <ContainerHeaderBoard>\n        <TitleVilter>{title}</TitleVilter>\n        <ContainerFilter>\n    <FilterDiv>\n        \n       <FilterButton type=\"button\" onClick={handleOpenFilter}>\n        <Icon\n            width={16}\n           height={16}\n            fillColor={'none'}\n            strokeColor={\"var(--additional-text-color)\"}\n             name={'filter'}\n         />\n          <FilterText>Filters</FilterText>\n        </FilterButton>\n      </FilterDiv>\n\n       {openFilter && (\n       <Modal open={openFilter} onClose={toggleFilter}>\n          <Filter onClose={toggleFilter} />\n       </Modal>\n      )}\n\n  \n   </ContainerFilter>\n      </ContainerHeaderBoard>\n    )\n}\n\nexport default HeaderDashboard","import styled from 'styled-components';\n\nexport const DivForColumns = styled.ul`\n  display: flex;\n  gap: 28px;\n`;\n\nexport const Column = styled.li`\n  display: block;\n`;\n\nexport const TitleColumnDiv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background-color: var(--btn-add-column);\n  border-radius: 8px;\n  align-items: center;\n  width: 334px;\n  height: 56px;\n  margin-bottom: 10px;\n\n  h3 {\n    font-size: 16px;\n    font-weight: 500;\n    color: var(--additional-text-color);\n    width: 260px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const SvgDiv = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Button = styled.button``;\n\nexport const Icons = styled.svg`\n  stroke: var(--show-filter-txt);\n  width: 16px;\n  height: 16px;\n  opacity: 50%;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;\n\nexport const ButtonForCard = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px 79px;\n  background-color: var(--additional-icon-color);\n  color: black;\n  border-radius: 8px;\n  align-items: center;\n  gap: 8px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    background-color: #b0eebe;\n  }\n`;\n\nexport const IconDoCard = styled.svg`\n  background-color: var(--btn-column);\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  stroke: white;\n  padding: 5px 7px 8px 6px;\n`;\n\nexport const Plus = styled.use`\n  stroke: var(--btn-plus-card);\n`;\n\nexport const TextBtn = styled.use`\nfont-weight:500;\nfont-size: 14px;\n  color: var(--btn-text-color);\n`;","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n  @media screen and (min-width: 1440px) {\n    input {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 14px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 154px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n  font-family: inherit;\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--show-filter-txt);\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 4px;\n`;\nexport const TextAdd = styled.p`\nfont-size:14px;\nfont-weight:500;\n`;\n\nexport const Label = styled.label`\n  width: 14px;\n  height: 14px;\n  border-radius: 100%;\n`;\n\nexport const PriorityDiv = styled.div`\n  display: flex;\n  margin-bottom: 14px;\n  gap: 8px;\n`;\n\nexport const InputRadio = styled.input`\n  display: none;\n  cursor: pointer;\n  &:checked + svg use {\n    stroke-opacity: 1;\n    transform: scale(1.05);\n  }\n`;\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 40px;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  letter-spacing: -0.02em;\n  color: var(--btn-text-color);\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from 'react';\nimport { Box, FormControlLabel, RadioGroup, Radio } from '@mui/material';\nimport { PriorityDiv } from './CardModal.styled'; \n\nconst CardPriorityList = ({ value, onChange }) => {\n  const [selectedValue, setSelectedValue] = useState(value || 'without');\n\n  const handleRadioChange = event => {\n    const selectedPriority = event.target.value;\n    setSelectedValue(selectedPriority);\n    onChange(selectedPriority);\n  };\n\n  const PRIORITY_LIST = [\n    {\n      value: 'low',\n      radioColor: {\n        static: '#8fa1d0',\n        onChecked: '#8fa1d0',\n      },\n    },\n    {\n      value: 'medium',\n      radioColor: {\n        static: 'var(--mediumPriorityColor)',\n        onChecked: 'var(--mediumPriorityColor)',\n      },\n    },\n    {\n      value: 'high',\n      radioColor: {\n        static: 'var(--highPriorityColor)',\n        onChecked: 'var(--highPriorityColor)',\n      },\n    },\n    {\n      value: 'without',\n      radioColor: {\n        static: 'var(--btn-rad-without)',\n        onChecked: 'var(--btn-rad-without)',\n      },\n    },\n  ]; \n\n  return (\n    <PriorityDiv>\n      <Box sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}>\n        <RadioGroup\n          aria-labelledby=\"radio-buttons-group-label\"\n          value={selectedValue}\n          name=\"radio-buttons-group\"\n          onChange={handleRadioChange}\n          sx={{ display: 'flex', flexDirection: 'row', gap: '8px' }}\n        >\n          {PRIORITY_LIST.map(button => {\n            const { value, radioColor } = button;\n            return (\n              <FormControlLabel\n                key={value}\n                value={value}\n                sx={{\n                  display: 'flex',\n                  gap: '4px',\n                  margin: '0',\n                  height: '24px',\n                  padding: '0',\n                }}\n                control={\n                  <Radio\n                    sx={{\n                      width: '14px',\n                      height: '14px',\n                      color: 'transparent',\n                      backgroundColor: radioColor.static,\n                      '&.Mui-checked': {\n                        color: radioColor.static,\n                        backgroundColor: radioColor.onChecked,\n                      },\n                    }}\n                    disableRipple\n                  />\n                }\n                label=\"\"\n              />\n            );\n          })}\n        </RadioGroup>\n      </Box>\n    </PriorityDiv>\n  );\n};\n\nexport default CardPriorityList;\n\n\n","import styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 4px;\n  font-size:14px;\n  align-items: flex-end;\n  justify-content: center;\n  text-align: center;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-weight: 500;\n  /* font-size: 14px; */\n  letter-spacing: -0.02em;\n  color: var(--additional-btn-bg-color);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: var(--accent-icon-hover-color);\n  }\n`;\n\nexport const ButtonSvg = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: none;\n  stroke: currentColor;\n`;\n\nexport const StyledDatePickerContainer = styled.div`\n  .react-datepicker {\n    font-family: inherit;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    background-color: var(--calendar-bg-color);\n    border: 1px solid var(--additional-icon-color);\n    border-radius: 8px;\n    padding: 18px;\n    width: 233px;\n    height: 254px;\n  }\n\n  .react-datepicker-popper > svg {\n    display: none;\n  }\n\n  .react-datepicker-popper {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .react-datepicker__month-container {\n    position: absolute;\n    padding: 18px;\n    width: 233px;\n    height: 254px;\n  }\n\n  .react-datepicker__header {\n    border: none;\n    background-color: transparent;\n    padding: 0;\n  }\n\n  .react-datepicker__month {\n    margin: 0;\n    margin-top: 11px;\n  }\n\n  .react-datepicker__current-month {\n    padding-bottom: 14px;\n    font-weight: 500;\n    font-size: 16px;\n    letter-spacing: -0.02em;\n    color: var(--btn-icon-color);\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    align-items: center;\n    gap: 12px;\n    border-top: 1px solid var(--calendar-additional-color-trans);\n    padding-top: 14px;\n  }\n\n  .react-datepicker__day-name {\n    display: inline-flex;\n    color: var(--calendar-text-color-trans);\n    font-family: 'Poppins', sans-serif;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    margin: 0;\n    width: 100%;\n  }\n\n  .react-datepicker__day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    width: 22px;\n    height: 22px;\n    margin: 0;\n    border-radius: 50%;\n    color: var(--btn-icon-color);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day:focus {\n    background-color: var(--additional-btn-bg-hover-color);\n    color: var(--calendar-secondary-hover-color);\n  }\n\n  .react-datepicker__day--disabled {\n    color: var(--calendar-additional-color-trans);\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--calendar-additional-color-trans);\n  }\n\n  .react-datepicker__day--today {\n    border-radius: 50%;\n    text-align: center;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--additional-btn-bg-hover-color);\n    color: var(--calendar-secondary-hover-color);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__week {\n    display: flex;\n  }\n\n  .react-datepicker__week > * {\n    flex: 1;\n    margin-right: 8px;\n  }\n\n  .react-datepicker__week > *:last-child {\n    margin-right: 0;\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: transparent;\n  }\n\n  .react-datepicker__navigation {\n    cursor: pointer;\n    position: absolute;\n    top: 10px;\n  }\n\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--additional-icon-color);\n    border-style: solid;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon::before {\n    border-color: var(--additional-text-color-op);\n  }\n`;\n","import Icon from 'components/Icon/Icon';\nimport DatePicker from 'react-datepicker';\nimport * as Styled from './Calendar.styled';\nimport { forwardRef } from 'react';\n\nconst Calendar = ({ date, changeDate }) => {\n  const CustomInput = forwardRef(({ value, onClick }, ref) => (\n    <Styled.Button type=\"button\" onClick={onClick} ref={ref}>\n      {value}\n      <Styled.ButtonSvg>\n        <Icon name=\"chevron-down\" />\n      </Styled.ButtonSvg>\n    </Styled.Button>\n  ));\n\n  const dateFormatChange = date => {\n    if (!(date instanceof Date)) {\n      return 'MMMM dd, yyyy';\n    }\n    const today = new Date();\n    if (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    ) {\n      return \"'Today', MMMM dd\";\n    } else {\n      return 'EEEE, MMMM dd';\n    }\n  };\n\n  return (\n    <Styled.StyledDatePickerContainer>\n      <DatePicker\n        className=\"datePicker\"\n        selected={date}\n        onChange={changeDate}\n        minDate={new Date()}\n        dateFormat={dateFormatChange(date)}\n        customInput={<CustomInput />}\n      />\n    </Styled.StyledDatePickerContainer>\n  );\n};\n\nexport default Calendar;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport CardPriorityList from './CardPriorityList';\nimport Calendar from 'components/Calendar/Calendar';\nimport { addCardThunk } from '../../../redux/cards/cards-operations';\nimport {\n  ButtonSend,\n  IconWrap,\n  ModalTitle,\n  Modalform,\n  PlusButton,\n  Text,\n  Textarea,\n  TitleInput,\n  TextAdd,\n} from './CardModal.styled';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors';\n\nconst CardAddModal = ({ columnId, showModal }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [cardPriority, setCardPriority] = useState('without');\n  const [deadline, setDeadline] = useState(new Date());\n  const board = useSelector(selectCurrentBoard);\n  const dispatch = useDispatch();\n  const [modalWidth, setModalWidth] = useState(350); // Default width\n  useEffect(() => {\n    const updateModalWidth = () => {\n      if (window.innerWidth < 768) {\n        setModalWidth(335); // Change width if Width is 768px or less\n      } else {\n        setModalWidth(350); // Default width\n      }\n    };\n\n    // Initial check\n    updateModalWidth();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', updateModalWidth);\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', updateModalWidth);\n    };\n  }, []);\n\n  const changeDeadline = date => {\n    setDeadline(date);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newCard = {\n      title: title.trim(),\n      description: description.trim(),\n      priority: cardPriority,\n      deadline,\n    };\n\n    try {\n      dispatch(addCardThunk({ boardId: board._id, columnId, body: newCard }));\n      showModal(false);\n    } catch (error) {\n      return error.message;\n    }\n    \n  };\n\n  return (\n    <Modal width={modalWidth} height={522} onClose={() => showModal(false)}>\n      <Modalform onSubmit={handleSubmit}>\n        <ModalTitle>{'Add card'}</ModalTitle>\n        <TitleInput\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          required\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n        />\n        <Textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n        />\n        <Text>{'Label color'}</Text>\n        <CardPriorityList value={cardPriority} onChange={setCardPriority} />\n        <Text>{'Deadline'}</Text>\n        <Calendar style={{fontSize:`14px`}} date={deadline} changeDate={changeDeadline} />\n        <ButtonSend type=\"submit\">\n          <PlusButton>\n            <IconWrap>\n              <Icon\n                width={14}\n                height={14}\n                fillColor={'none'}\n                strokeColor={'var(--icon-plus)'}\n                name={'icon-plus'}\n              />\n            </IconWrap>\n            <TextAdd>Add</TextAdd>\n          </PlusButton>\n        </ButtonSend>\n      </Modalform>\n    </Modal>\n  );\n};\n\nexport default CardAddModal;\n","import styled from 'styled-components';\n\nexport const Modalform = styled.form`\n  border-radius: 8px;\n  width: 100%;\n  &:hover {\n    border-color: var(--accent-icon-hover-color);\n  }\n\n  @media screen and (min-width: 1440px) {\n    input\n    {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--input-text-color);\n  margin-bottom: 24px;\n`;\n\nexport const TitleInput = styled.input`\n  width: 100%;\n  border: 1px solid var(--input-border-color);\n  border-radius: 8px;\n  height: 49px;\n  opacity: 0.4;\n  margin-bottom: 24px;\n  color: var(--input-text-color) !important;\n  padding: 14px 18px;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background-color: var(--input-border-color);\n  color: var(--btn-text-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const PlusButton = styled.div`\n\n  width: 64px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-text-color);\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n \n`;\n export const Text = styled.div`\nfont-weight:500;\nfont-size:14px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../../Modal/Modal/Modal';\nimport {\n  Modalform,\n  ModalTitle,\n  TitleInput,\n  ButtonSend,\n  PlusButton,\n  IconWrap,\n} from './ColumnModal.styled';\nimport Icon from '../../Icon/Icon';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport { updateColumnThunk } from '../../../redux/column/column-operations';\n\nconst EditColumnModal = ({ showModal, columnId, title, onColumnUpdate }) => {\n  const [newTitle, setNewTitle] = useState(title ? title : '');\n  const { _id: boardId } = useSelector(selectCurrentBoard);\n  const dispatch = useDispatch();\n  const [modalWidth, setModalWidth] = useState(350); // Default width\n  useEffect(() => {\n    const updateModalWidth = () => {\n      if (window.innerWidth < 768) {\n        setModalWidth(335); // Change width if Width is 768px or less\n      } else {\n        setModalWidth(350); // Default width\n      }\n    };\n\n    // Initial check\n    updateModalWidth();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', updateModalWidth);\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', updateModalWidth);\n    };\n  }, []);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    const editColumn = {\n      title: newTitle,\n    };\n    try {\n      dispatch(\n        updateColumnThunk({ boardId: boardId, id: columnId, body: editColumn })\n      );\n      if (onColumnUpdate) {\n        onColumnUpdate(newTitle);\n      }\n     \n      showModal(false);\n    } catch (error) {\n      return error.message;\n    }\n  };\n\n  const handleTitleChange = evt => {\n    setNewTitle(evt.target.value);\n  };\n\n  return (\n    <>\n      <Modal width={modalWidth} height={221} onClose={() => showModal(false)}>\n        <Modalform onSubmit={handleSubmit}>\n          <ModalTitle>{'Edit column'}</ModalTitle>\n          <TitleInput\n            value={newTitle}\n            onChange={handleTitleChange}\n            required\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Titie\"\n          />\n\n          <ButtonSend type=\"submit\">\n            <PlusButton>\n              <IconWrap>\n                <Icon\n                  width={14}\n                  height={14}\n                  fillColor={'none'}\n                  strokeColor={'var(--icon-plus)'}\n                  name={'icon-plus'}\n                />\n              </IconWrap>\n              Edit\n            </PlusButton>\n          </ButtonSend>\n        </Modalform>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditColumnModal;\n","export const selectCards = state => state.cards.cards;\nexport const selectError = state => state.cards.error;\nexport const selectIsLoading = state => state.cards.isLoading;","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  min-width: 100%;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  background: var(--btn-add-column);\n  position: relative;\n  \n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    height: 154px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 334px;\n    height: 154px;\n  }\n`;\n\nexport const TextCard = styled.h4`\n  font-weight: 600;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--icon-color);\n  padding-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;  \n`;\n\nexport const CardsColor = styled.div`\n  width: 4px;\n  min-height: 100%;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n\n`;\n\nexport const CardDiv = styled.div`\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  max-width: 334px;\n  padding: 14px 20px 14px 24px;\n    width:100%;\n  \n`;\n\nexport const CardsText = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  color: var(--cart-text);\n  margin-bottom: 14px;\n  line-height: 1.33;\n  letter-spacing: -0.02em;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  white-space: normal;\n  width: calc(100% - 20px);\n  display: -moz-box;\n  -moz-box-orient: vertical;\n  max-width: 100%;\n  overflow-wrap: anywhere;\n`;\n\nexport const Line = styled.hr`\n  border: none;\n  height: 1px;\n  background-color: var(--cart-text);\n`;\n\n\nexport const CardsParams = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding:14px 0;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n justify-content: flex-start;\n  width: 100%;\n`;\n\nexport const PriorityDiv = styled.div`\nmargin-right: 14px;\n\n\n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const PriorityTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: var(--cart-text);\n  letter-spacing: -0.02em;\n  margin-bottom:4px;\n\n`;\n\nexport const ColorCard = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50px;\n`;\n\nexport const ColorCardText = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: var(--icon-color);\n  letter-spacing: -0.02em;\n`;\n\nexport const DeadlineDiv = styled.div`\n \n  div {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const DeadlineTitle = styled.p`\n  font-size: 8px;\n  font-weight: 400;\n  color: var(--cart-text);\n  margin-bottom:4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  font-weight: 400;\n  color: var(--icon-color);\n`;\n\nexport const SvgContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ParamsButtons = styled.button``;\n\nexport const ButtonsIcon = styled.svg`\n  stroke: var(--cart-text);\n  opacity: 50%;\n  width: 16px;\n  height: 16px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n  `;\n\n  export const ButtonsIconBell = styled.svg`\n  stroke: var(--additional-icon-color);\n  opacity: 50%;\n  width: 16px;\n  height: 16px;\n  transition: 350ms ease-in-out;\n\n  &:hover {\n    opacity: 100%;\n  }\n`;","export function formatDate(inputDate) {\n   const date = new Date(inputDate);\n    // Получаем день, месяц и год из объекта Date\n let day = date.getUTCDate();\n    let month = date.getUTCMonth() + 1; \n    let year = date.getUTCFullYear();\n    // Форматируем день и месяц, чтобы добавить ведущий ноль, если нужно\n    day = day < 10 ? \"0\" + day : day;\n    month = month < 10 ? \"0\" + month : month;\n    // Формируем итоговую строку в нужном формате\n    var formattedDate = day + \"/\" + month + \"/\" + year;\n    \n    return formattedDate;\n}\nexport function formatCurrentDate(date) {\n   const year = date.getFullYear();\n    // Получаем месяц и добавляем 1, так как в JavaScript месяцы нумеруются с 0\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    \n    const day = date.getDate().toString().padStart(2, '0');\n    \n    return year + \"-\" + month + \"-\" + day;\n}\n\nexport function isSameDay(date1, date2) {\n    return date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate();\n}","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../Modal/Modal';\nimport Icon from 'components/Icon/Icon';\nimport CardPriorityList from './CardPriorityList';\nimport Calendar from 'components/Calendar/Calendar';\nimport { updateCardThunk } from '../../../redux/cards/cards-operations';\nimport {\n  ButtonSend,\n  IconWrap,\n  ModalTitle,\n  Modalform,\n  PlusButton,\n  Text,\n  Textarea,\n  TitleInput,\n} from './CardModal.styled';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors';\n\nconst CardEditModal = ({ showModal, cardData, columnId }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [cardPriority, setCardPriority] = useState('without');\n  const [deadline, setDeadline] = useState(new Date());\n  const board = useSelector(selectCurrentBoard);\n  const dispatch = useDispatch();\n  const [modalWidth, setModalWidth] = useState(350); // Default width\n  useEffect(() => {\n    const updateModalWidth = () => {\n      if (window.innerWidth < 768) {\n        setModalWidth(335); // Change width if Width is 768px or less\n      } else {\n        setModalWidth(350); // Default width\n      }\n    };\n\n    // Initial check\n    updateModalWidth();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', updateModalWidth);\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', updateModalWidth);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (cardData) {\n      setTitle(cardData.title || '');\n      setDescription(cardData.description || '');\n      setCardPriority(cardData.cardPriority || 'without');\n      setDeadline(cardData.deadline || new Date());\n    }\n  }, [cardData]);\n\n  const changeDeadline = date => {\n    setDeadline(date);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const data = {\n      //id: cardData._id,\n      title: title.trim(),\n      description: description.trim(),\n      priority: cardPriority,\n      deadline,\n    };\n\n    dispatch(updateCardThunk({ boardId: board._id, columnId, cardId: cardData._id, body: data }));\n\n    showModal(false)\n    return;\n  };\n\n  return (\n    <Modal width={modalWidth} height={522} onClose={() => showModal(false)}>\n      <Modalform onSubmit={handleSubmit}>\n        <ModalTitle>{'Edit card'}</ModalTitle>\n        <TitleInput\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          required\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n        />\n        <Textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n        />\n        <Text>{'Label color'}</Text>\n        <CardPriorityList value={cardPriority} onChange={setCardPriority} />\n        <Text>{'Deadline'}</Text>\n        <Calendar date={deadline} changeDate={changeDeadline} />\n        <ButtonSend type=\"submit\">\n          <PlusButton>\n            <IconWrap>\n              <Icon\n                width={14}\n                height={14}\n                fillColor={'none'}\n                strokeColor={'var(--icon-plus)'}\n                name={'icon-plus'}\n              />\n            </IconWrap>\n            Edit\n          </PlusButton>\n        </ButtonSend>\n      </Modalform>\n    </Modal>\n  );\n};\n\nexport default CardEditModal;\n","import styled from 'styled-components';\n\nexport const Popup = styled.div`\n  position: absolute;\n right: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 8px;\n  padding: 18px;\n  width: 135px;\n  bottom: 20px;\n  border-radius: 8px;\n  z-index: 10;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n background: var(--additional-bg-color);\n`;\n\nexport const BtnPop = styled.div`\n  \n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 18px;\n    row-gap: 10px;\n    font-size: 11px;\n    background-color: transparent;\n    padding: 0;\n    width: 100%;\n    overflow: hidden;\n    color: var(--cart-text);\n    font-size: 14px;\n    letter-spacing: -0.02em;\n   \n\n    &:hover,\n   &:focus {\n    border: blue;\n    opacity: 1;\n    visibility: visible;\n    height: auto;\n    color: var(--accent-color);\n  }\n`;\n\n\n\n\n","import Icon from '../../Icon/Icon';\nimport { Popup, BtnPop} from './MovePopUp.styled';\n\nconst MovePopUp = ({ allColumns, columnId, moveCard }) => {\n    \n  return (  \n\n    \n    <Popup id=\"move-popup\">\n        \n      {allColumns\n        .filter(column => column._id !== columnId)\n        .map(column => {\n          return (\n            <BtnPop\n              key={column._id}\n              type=\"button\"\n              title={`${column.title}`}\n              onClick={() => moveCard(column._id)}\n             \n            >\n              <span> {column.title}</span>\n              <Icon\n                width={16}\n                height={16}\n                strokeColor={'var(--cart-text)'}\n                fillColor={'none'}\n                name={\"broken-right\"}\n              />\n            </BtnPop>\n          );\n        })}\n    </Popup>\n  );\n};\n\nexport default MovePopUp;","import { useState ,useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Card,\n    CardsColor,\n    CardDiv,\n    CardsParams,\n    PriorityDiv,\n    PriorityTitle,\n    ColorCard,\n    CardsText,\n    ColorCardText,\n    DeadlineDiv,\n    DeadlineTitle,\n    DeadlineDate,\n    SvgContainer,\n    ParamsButtons,\n    ButtonsIcon,\n    TextCard,\n    Line, Wrap,ButtonsIconBell\n  } from './TasksCard.styled';\n  import sprite from '../../../assets/svg/sprite.svg';\nimport { PRIORITY_LIST } from '../../../constants/index';\nimport { formatDate,  isSameDay } from '../../../helpers/dateFormat';\nimport { moveCardThunk } from '../../../redux/cards/cards-operations';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport DeleteModal from '../../Modal/DeleteModal/DeleteModal';\nimport CardEditModal from 'components/Modal/CardModal/CardEditModal';\nimport  MovePopUp from '../MovePopUp/MovePopUp';\n  \nconst TasksCard = ({ card, columnId, allColumns,onDelete  }) => {\n  const dispatch = useDispatch();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentDate(new Date());\n    }, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n  \n  const { title, description, priority, deadline = currentDate } = card;\n  const deadlineDate = new Date(deadline);\n\n  const priorityColor = PRIORITY_LIST.find(item => item.priority === priority)?.color || PRIORITY_LIST[0].color;\n  \n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\n  const [showCardEditModal, setShowCardEditModal] = useState(false);\n  const [showCardMoveModal, setShowCardMoveModal] = useState(false);\n  \n  const { _id: boardId } = useSelector(selectCurrentBoard);\n\n  const toggleCardEditModal = () =>\n    setShowCardEditModal(prevShowModal => !prevShowModal);\n  \n  const moveCardToAnotherColumn = newColumn => {\n    \n    dispatch(moveCardThunk({ cardId: card._id, newColumn, columnId, boardId }));\n  };\n\n  const toggleCardMoveModal  =() => {\n    setShowCardMoveModal(prevShowModal => !prevShowModal);\n  }\n\n    return (\n      <Card>\n        <CardsColor style={{ backgroundColor: priorityColor }}></CardsColor>\n  \n        <CardDiv>\n          <TextCard>{title}</TextCard>\n          <CardsText>{description}</CardsText>\n         \n          <Line></Line>\n          <CardsParams>\n            <Wrap>\n            <PriorityDiv>\n              <PriorityTitle>Priority</PriorityTitle>\n              <div>\n     \n                <ColorCard style={{ backgroundColor: priorityColor }}></ColorCard>\n\n                <ColorCardText>{priority}</ColorCardText>\n              </div>\n            </PriorityDiv>\n  \n            <DeadlineDiv>\n              <DeadlineTitle>Deadline</DeadlineTitle>\n              <DeadlineDate>{formatDate(deadline)}</DeadlineDate>\n            </DeadlineDiv>\n            </Wrap>\n           \n            <SvgContainer>\n\n            {isSameDay(deadlineDate, currentDate) && (\n            <ParamsButtons>\n            <ButtonsIconBell>\n             <use href={`${sprite}#bell`}></use>\n            </ButtonsIconBell>\n            </ParamsButtons>)}\n\n          \n             <ParamsButtons onClick={toggleCardMoveModal}>\n                <ButtonsIcon >\n                  <use href={`${sprite}#broken-right`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n              {showCardMoveModal && (<MovePopUp\n                  allColumns={allColumns}\n                  columnId={columnId}\n                  moveCard={moveCardToAnotherColumn}\n                  onClose={toggleCardMoveModal}\n                />)}\n             \n  \n              <ParamsButtons type=\"button\" onClick={toggleCardEditModal}>\n                <ButtonsIcon>\n                  <use href={`${sprite}#pencil`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n  \n              <ParamsButtons type=\"button\" onClick={() => setIsDeleteModalShown(true)}>\n                <ButtonsIcon>\n                  <use href={`${sprite}#trash`}></use>\n                </ButtonsIcon>\n              </ParamsButtons>\n              {showCardEditModal && (\n                <CardEditModal\n                  showModal={setShowCardEditModal}\n                  cardData={card}\n                  columnId={columnId}\n                />\n              )}\n              {isDeleteModalShown && (\n                <DeleteModal\n                  onClose={() => setIsDeleteModalShown(false)}\n                  onConfirm={() => onDelete(boardId, columnId, card._id)}\n                />\n              )}\n            </SvgContainer>\n\n          </CardsParams>\n        </CardDiv>\n      </Card>\n    );\n  };\n  \n  export default TasksCard;","import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  max-height: 63vh;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    position: absolute;\n    left: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(255, 255, 255, 0.5);\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(12, 12, 12, 0.5);\n    border-radius: 12px;\n  }\n`;\n","export const getFilter = state => state.filter.filter;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCards } from \"../../../redux/cards/cards-selectors.js\";\nimport { selectCurrentBoard } from \"../../../redux/boards/boards-selectors.js\";\nimport { getAllCardsThunk, deleteCardThunk, getCardByIdThunk } from \"../../../redux/cards/cards-operations.js\";\nimport TasksCard from \"./TasksCard\";\nimport { CardContainer } from \"./TasksCardList.styled.jsx\";\nimport {getFilter} from '../../../redux/filter/filter-selectors.js'\n\nconst TasksCardList = ({columnId, allColumns}) => {\n    const cardsAll = useSelector(selectCards);\n\n    const columnCards = cardsAll.filter(({column}) => column._id === columnId || column === columnId)\n    const filter = useSelector(getFilter);\n    const filteredCards = columnCards.filter(({priority}) => priority.toLowerCase() === filter.toLowerCase() )\n    const cards = filter === 'all' ? columnCards : filteredCards; \n    \n  \n    const board = useSelector(selectCurrentBoard);\n    const { _id: boardId } = board;\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n      dispatch(getAllCardsThunk({ boardId, columnId }));\n    }, [dispatch, boardId, columnId]);\n  \n  const handleDeleteCard = (boardId, columnId, card) => {\n    try {\n      dispatch(getCardByIdThunk({ boardId, columnId, cardId: card._id }))\n        .then(({ payload }) => {  dispatch(deleteCardThunk({ boardId, columnId, cardId: payload._id })) });\n    } catch (error) {\n      return error.message;\n    }\n  }\n\n  return (\n    <CardContainer>\n      {cards.length > 0 &&\n        cards.map(card => (\n          <TasksCard key={card._id} card={card} columnId={columnId} allColumns={allColumns} onDelete={()=> handleDeleteCard(boardId, columnId, card ) }/>\n          \n        ))}\n    </CardContainer>\n  );\n};\n\nexport default TasksCardList;","import { useState } from 'react';\nimport sprite from '../../../assets/svg/sprite.svg';\nimport CardAddModal from 'components/Modal/CardModal/CardAddModal.jsx';\nimport EditColumnModal from 'components/Modal/ColumnModal/EditColumnModal.jsx';\nimport DeleteModal from '../../Modal/DeleteModal/DeleteModal.jsx';\nimport TasksCardList from '../TasksCard/TasksCardList.jsx';\nimport {\n  TitleColumnDiv,\n  Button,\n  Icons,\n  SvgDiv,\n  ButtonForCard,\n  IconDoCard,\n  Column, Plus, TextBtn,\n} from './TasksColumn.styled.jsx';\n\nconst TasksColumnItem = ({ column, onDeleteColumn, allColumns }) => {\n  const [columnTitle, setColumnTitle] = useState(column.title);\n  const [showAddCardModal, setShowAddCardModal] = useState(false);\n  const [showEditColumnModal, setShowEditColumnModal] = useState(false);\n  const [showDeleteModal, setshowDeleteModal] = useState(false);\n\n  const toggleAddCardModal = () =>\n    setShowAddCardModal(prevShowModal => !prevShowModal);\n  const toggleEditColumnModal = () =>\n    setShowEditColumnModal(prevShowModal => !prevShowModal);\n\n  const handleColumnUpdate = newTitle => {\n    setColumnTitle(newTitle);\n  };\n\n  return (\n    <>\n      <Column id={column._id}>\n        <TitleColumnDiv>\n          <h3>{columnTitle}</h3>\n          <SvgDiv>\n            <Button onClick={toggleEditColumnModal}>\n              <Icons>\n                <use href={`${sprite}#pencil`}></use>\n              </Icons>\n            </Button>\n\n            <Button onClick={() => setshowDeleteModal(true)}>\n              <Icons>\n                <use href={`${sprite}#trash`}></use>\n              </Icons>\n            </Button>\n          </SvgDiv>\n        </TitleColumnDiv>\n\n        <TasksCardList columnId={column._id} allColumns={allColumns}/>\n\n        <ButtonForCard onClick={toggleAddCardModal}>\n          <IconDoCard>\n            <Plus href={`${sprite}#plus`}></Plus>\n          </IconDoCard>\n          <TextBtn>Add another card</TextBtn>\n        </ButtonForCard>\n      </Column>\n\n      {showAddCardModal && (\n        <CardAddModal columnId={column._id} showModal={setShowAddCardModal} />\n      )}\n      {showEditColumnModal && (\n        <EditColumnModal\n          showModal={setShowEditColumnModal}\n          columnId={column._id}\n          title={columnTitle}\n          onColumnUpdate={handleColumnUpdate}\n        />\n      )}\n      {showDeleteModal && (\n        <DeleteModal\n          onClose={() => setshowDeleteModal(false)}\n          onConfirm={() => onDeleteColumn(column._id)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TasksColumnItem;\n","export const selectСolumns = state => state.columns.columns;\nexport const selectCurrentСolumn = state => state.columns.currentСolumns;\nexport const selectIsLoading = state => state.columns.isLoading;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { DivForColumns } from './TasksColumn.styled.jsx';\nimport TasksColumnItem from './TasksColumnItem.jsx';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport { selectСolumns } from '../../../redux/column/column-selectors.js';\nimport {\n  deleteColumnThunk,\n  getAllColumnsThunk,\n  getColumnByIdThunk\n} from '../../../redux/column/column-operations.js';\n\nconst TasksColumn = () => {\n\n  const columns = useSelector(selectСolumns);\n\n  const board = useSelector(selectCurrentBoard);\n  const { _id } = board;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(_id) {\n      dispatch(getAllColumnsThunk(_id));\n    }\n  }, [_id, dispatch]);\n\n  const handleDeleteColumn = async colunmId => {\n    try {\n     \n        dispatch(getColumnByIdThunk({ boardId: _id, id: colunmId,  }))\n          .then(({ payload }) => {  dispatch(deleteColumnThunk({ boardId: _id, id: payload._id }))});\n     \n    } catch (error) {\n      return error.message;\n    }\n  };\n \n \n\n\n  return (\n    <DivForColumns>\n      {columns.length > 0 &&\n        columns.map(column => (\n          <TasksColumnItem\n            key={column._id}\n            allColumns={columns}\n            column={column}\n            onDeleteColumn={() => handleDeleteColumn(column._id)}\n          />\n        ))}\n    </DivForColumns>\n  );\n};\n\nexport default TasksColumn;\n","import React, { useState, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport Modal from '../../Modal/Modal/Modal';\nimport Icon from '../../Icon/Icon';\nimport { selectCurrentBoard } from '../../../redux/boards/boards-selectors.js';\nimport { addColumnThunk } from '../../../redux/column/column-operations';\nimport {\n  Modalform,\n  ModalTitle,\n  TitleInput,\n  ButtonSend,\n  PlusButton,\n  IconWrap,\n  Text,\n} from './ColumnModal.styled';\n\nconst ColumnModal = ({ showModal }) => {\n  const [title, setTitle] = useState('');\n  const { _id } = useSelector(selectCurrentBoard);\n  const dispatch = useDispatch();\n  const [modalWidth, setModalWidth] = useState(350); // Default width\n  useEffect(() => {\n    const updateModalWidth = () => {\n      if (window.innerWidth < 768) {\n        setModalWidth(335); // Change width if Width is 768px or less\n      } else {\n        setModalWidth(350); // Default width\n      }\n    };\n\n    // Initial check\n    updateModalWidth();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', updateModalWidth);\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', updateModalWidth);\n    };\n  }, []);\n  \n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    const newColumn = {\n      title,\n    };\n\n    try {\n      dispatch(addColumnThunk({ boardId: _id, body: newColumn })).then(action => {\n        if (action.type === 'columns/createColumn/fulfilled') {\n          \n        }\n      });\n      showModal(false);\n    } catch (error) {\n      return error.message;\n    }\n  };\n\n  const handleTitleChange = evt => {\n    setTitle(evt.target.value);\n  };\n\n  return (\n    <>\n      <Modal width={modalWidth} height={221} onClose={() => showModal(false)}>\n        <Modalform onSubmit={handleSubmit}>\n          <ModalTitle>{'Add column'}</ModalTitle>\n          <TitleInput\n            value={title}\n            onChange={handleTitleChange}\n            required\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Titie\"\n          />\n\n          <ButtonSend type=\"submit\">\n            <PlusButton>\n              <IconWrap>\n                <Icon\n                  width={14}\n                  height={14}\n                  fillColor={'none'}\n                  strokeColor={'var(--icon-plus)'}\n                  name={'icon-plus'}\n                />\n              </IconWrap>\n            <Text>Add</Text>\n            </PlusButton>\n          </ButtonSend>\n        </Modalform>\n      </Modal>\n    </>\n  );\n};\n\nexport default ColumnModal;\n","import styled from 'styled-components';\n\nexport const ButtonSend = styled.button`\n  border-radius: 8px;\n  min-width: 335px;\n  height: 56px;\n  background-color: var(--btn-add-column);\n  color: var(--icon-color);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 0.7;\n  }\n  @media (max-width: 768px) {\n    min-width: 335px;\n  }\n  @media (max-width: 400px) {\n    min-width: 287px;\n  }\n\n  @media (max-width: 350px) {\n    min-width: 255px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-add-column-wrap);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // border: 1px solid red;\n`;\n\nexport const PlusButton = styled.div`\n  // width: 64px;\n  // height: 28px;\n  font-weight:500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\nexport const Text = styled.div`\nfont-weight:500;\nfont-size:14px;\n`;\n\n// export const AddColumnButton = styled.button`\n//   display: flex;\n//   height: 56px;\n//   padding: 12px 79px;\n//   background-color: black;\n//   color: #fff;\n//   border-radius: 8px;\n//   align-items: center;\n//   gap: 8px;\n//   transition: 350ms ease-in-out;\n//   &:hover {\n//     background-color: #121212;\n//   }\n// `;\n\n// export const IconPlus = styled.svg`\n//   background-color: #fff;\n//   border-radius: 8px;\n//   width: 28px;\n//   height: 28px;\n//   stroke: black;\n//   padding: 5px 7px 8px 6px;\n// `;\n","// import { AddColumnButton, IconPlus } from './ButtonForColumn.styled';\n// import sprite from '../../../assets/svg/sprite.svg';\nimport ColumnModal from 'components/Modal/ColumnModal/ColumnModal';\nimport { useState } from 'react';\nimport Icon from '../../Icon/Icon';\nimport  {IconWrap, PlusButton, ButtonSend,Text,} from './ButtonForColumn.styled'\n\nconst ButtonForColumn = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal)\n\n  return (\n    <>\n      <ButtonSend type=\"submit\" onClick={toggleModal}>\n        <PlusButton>\n          <IconWrap>\n            <Icon\n              width={14}\n              height={14}\n              fillColor={'none'}\n              strokeColor={'var( --btn-add-column'}\n              name={'icon-plus'}\n            />\n          </IconWrap>\n\n          <Text>Add another column</Text>\n        </PlusButton>\n      </ButtonSend>\n      {showModal && <ColumnModal showModal={setShowModal} />}\n    </>\n  );\n};\n\nexport default ButtonForColumn;","import styled from 'styled-components';\n\nexport const ContainerMainBoard = styled.div`\n  display: flex;\n  gap: 18px;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  height: 105%;\n\n  &::-webkit-scrollbar {\n    height: 12px;\n    position: absolute;\n    left: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(255, 255, 255, 0.5);\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(12, 12, 12, 0.5);\n    border-radius: 12px;\n  }\n`;\n","\nimport TasksColumn from './TasksColumn/TasksColumn';\nimport ButtonForColumn from './ButtonForColumn/ButtonForColumn';\nimport { ContainerMainBoard } from './MainDashboard.styled';\n\n\n\n// import Loader from '../Loader/Loader';\n\nconst MainDashboard = () => {\n  // const isLoading = useSelector(selectAuthLoading);\n  \n\n  return (\n    <ContainerMainBoard>\n      <TasksColumn />\n      <ButtonForColumn />\n\n    </ContainerMainBoard>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const ContainerScreensPage = styled.div`\n  padding: 14px 20px 60px 14px;\n  background: (var--primary-bg-color);\n  background-size: cover;\n  background-position: center;\n  height: calc(100vh - 70px);\n  background-image: url(${props => props.backgroundImage.desk});\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${props => props.backgroundImage.deskx2});\n  }\n  @media screen and (min-width: 320px) and (max-width: 767px) {\n    background-image: url(${props => props.backgroundImage.mob});\n  }\n  @media screen and (min-width: 320px) and (max-width: 767px) and (min-device-pixel-ratio: 2),\n    screen and (min-width: 320px) and (max-width: 767px) and (-webkit-min-device-pixel-ratio: 2),\n    screen and (min-width: 320px) and (max-width: 767px) and (min-resolution: 192dpi),\n    screen and (min-width: 320px) and (max-width: 767px) and (min-resolution: 2dppx) {\n    background-image: url(${props => props.backgroundImage.mobx2});\n  }\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    background-image: url(${props => props.backgroundImage.tab});\n  }\n  @media screen and (min-width: 768px) and (max-width: 1439px) and (min-device-pixel-ratio: 2),\n    screen and (min-width: 768px) and (max-width: 1439px) and (-webkit-min-device-pixel-ratio: 2),\n    screen and (min-width: 768px) and (max-width: 1439px) and (min-resolution: 192dpi),\n    screen and (min-width: 768px) and (max-width: 1439px) and (min-resolution: 2dppx) {\n    background-image: url(${props => props.backgroundImage.tabx2});\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport HeaderDashboard from 'components/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\nimport { getBoardByIdThunk } from '../../redux/boards/boards-operations.js';\nimport {\n  selectBoards,\n  selectCurrentBoard,\n} from '../../redux/boards/boards-selectors.js';\nimport { ContainerScreensPage } from './ScreenPage.styled';\nimport { handleBackgroundChange } from './handleBackgorundChange.js';\n\nconst ScreensPage = () => {\n  const boards = useSelector(selectBoards);\n  const board = useSelector(selectCurrentBoard);\n  const { boardId } = useParams();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      if (boardId) {\n        const board = boards.find(board => board._id === boardId);\n        const boardId = board._id;\n        dispatch(getBoardByIdThunk(boardId));\n      } else {\n        dispatch(getBoardByIdThunk(boards[0]._id));\n      }\n      \n    } catch (error) {\n    }\n  }, [dispatch, boardId, boards]);\n\n  const backgroundImage = handleBackgroundChange(board.background);\n\n  return (\n    <ContainerScreensPage backgroundImage={backgroundImage}>\n      <HeaderDashboard />\n      <MainDashboard />\n    </ContainerScreensPage>\n  );\n};\n\nexport default ScreensPage;\n","import AirDesk from '../../assets/img/desk/air-desk-1x.jpg';\nimport AirDeskX2 from '../../assets/img/desk/air-desk-2x.jpg';\nimport AirTab from '../../assets/img/tab/air-tab-1x.jpg';\nimport AirTabX2 from '../../assets/img/tab/air-tab-2x.jpg';\nimport AirMob from '../../assets/img/mob/air-mob-1x.jpg';\nimport AirMobX2 from '../../assets/img/mob/air-mob-2x.jpg';\nimport AbstractDesk from '../../assets/img/desk/abstract-desk-1x.jpg';\nimport AbstractDeskX2 from '../../assets/img/desk/abstract-desk-2x.jpg';\nimport AbstractTab from '../../assets/img/tab/abstract-tab-1x.jpg';\nimport AbstractTabX2 from '../../assets/img/tab/abstract-tab-2x.jpg';\nimport AbstractMob from '../../assets/img/mob/abstract-mob-1x.jpg';\nimport AbstractMobX2 from '../../assets/img/mob/abstract-mob-2x.jpg';\nimport BallonsDesk from '../../assets/img/desk/ballons-desk-1x.jpg';\nimport BallonsDeskX2 from '../../assets/img/desk/ballons-desk-2x.jpg';\nimport BallonsTab from '../../assets/img/tab/ballons-tab-1x.jpg';\nimport BallonsTabX2 from '../../assets/img/tab/ballons-tab-2x.jpg';\nimport BallonsMob from '../../assets/img/mob/ballons-mob-1x.jpg';\nimport BallonsMobX2 from '../../assets/img/mob/ballons-mob-2x.jpg';\nimport CanyonDesk from '../../assets/img/desk/canyon-desk-1x.jpg';\nimport CanyonDeskX2 from '../../assets/img/desk/canyon-desk-2x.jpg';\nimport CanyonTab from '../../assets/img/tab/canyon-tab-1x.jpg';\nimport CanyonTabX2 from '../../assets/img/tab/canyon-tab-2x.jpg';\nimport CanyonMob from '../../assets/img/mob/canyon-mob-1x.jpg';\nimport CanyonMobX2 from '../../assets/img/mob/canyon-mob-2x.jpg';\nimport CloudsDesk from '../../assets/img/desk/clouds-desk-1x.jpg';\nimport CloudsDeskX2 from '../../assets/img/desk/clouds-desk-2x.jpg';\nimport CloudsTab from '../../assets/img/tab/clouds-tab-1x.jpg';\nimport CloudsTabX2 from '../../assets/img/tab/clouds-tab-2x.jpg';\nimport CloudsMob from '../../assets/img/mob/clouds-mob-1x.jpg';\nimport CloudsMobX2 from '../../assets/img/mob/clouds-mob-2x.jpg';\nimport MagnoliaDesk from '../../assets/img/desk/magnolia-desk-1x.jpg';\nimport MagnoliaDeskX2 from '../../assets/img/desk/magnolia-desk-2x.jpg';\nimport MagnoliaTab from '../../assets/img/tab/magnolia-tab-1x.jpg';\nimport MagnoliaTabX2 from '../../assets/img/tab/magnolia-tab-2x.jpg';\nimport MagnoliaMob from '../../assets/img/mob/magnolia-mob-1x.jpg';\nimport MagnoliaMobX2 from '../../assets/img/mob/magnolia-mob-2x.jpg';\nimport MilkywayDesk from '../../assets/img/desk/milkyway-desk-1x.jpg';\nimport MilkywayDeskX2 from '../../assets/img/desk/milkyway-desk-2x.jpg';\nimport MilkywayTab from '../../assets/img/tab/milkyway-tab-1x.jpg';\nimport MilkywayTabX2 from '../../assets/img/tab/milkyway-tab-2x.jpg';\nimport MilkywayMob from '../../assets/img/mob/milkyway-mob-1x.jpg';\nimport MilkywayMobX2 from '../../assets/img/mob/milkyway-mob-2x.jpg';\nimport MoonDesk from '../../assets/img/desk/moon-desk-1x.jpg';\nimport MoonDeskX2 from '../../assets/img/desk/moon-desk-2x.jpg';\nimport MoonTab from '../../assets/img/tab/moon-tab-1x.jpg';\nimport MoonTabX2 from '../../assets/img/tab/moon-tab-2x.jpg';\nimport MoonMob from '../../assets/img/mob/moon-mob-1x.jpg';\nimport MoonMobX2 from '../../assets/img/mob/moon-mob-2x.jpg';\nimport NightDesk from '../../assets/img/desk/night-desk-1x.jpg';\nimport NightDeskX2 from '../../assets/img/desk/night-desk-2x.jpg';\nimport NightTab from '../../assets/img/tab/night-tab-1x.jpg';\nimport NightTabX2 from '../../assets/img/tab/night-tab-2x.jpg';\nimport NightMob from '../../assets/img/mob/night-mob-1x.jpg';\nimport NightMobX2 from '../../assets/img/mob/night-mob-2x.jpg';\nimport PalmDesk from '../../assets/img/desk/palm-desk-1x.jpg';\nimport PalmDeskX2 from '../../assets/img/desk/palm-desk-2x.jpg';\nimport PalmTab from '../../assets/img/tab/palm-tab-1x.jpg';\nimport PalmTabX2 from '../../assets/img/tab/palm-tab-2x.jpg';\nimport PalmMob from '../../assets/img/mob/palm-mob-1x.jpg';\nimport PalmMobX2 from '../../assets/img/mob/palm-mob-2x.jpg';\nimport RocksDesk from '../../assets/img/desk/rocks-desk-1x.jpg';\nimport RocksDeskX2 from '../../assets/img/desk/rocks-desk-2x.jpg';\nimport RocksTab from '../../assets/img/tab/rocks-tab-1x.jpg';\nimport RocksTabX2 from '../../assets/img/tab/rocks-tab-2x.jpg';\nimport RocksMob from '../../assets/img/mob/rocks-mob-1x.jpg';\nimport RocksMobX2 from '../../assets/img/mob/rocks-mob-2x.jpg';\nimport SeaDesk from '../../assets/img/desk/sea-desk-1x.jpg';\nimport SeaDeskX2 from '../../assets/img/desk/sea-desk-2x.jpg';\nimport SeaTab from '../../assets/img/tab/sea-tab-1x.jpg';\nimport SeaTabX2 from '../../assets/img/tab/sea-tab-2x.jpg';\nimport SeaMob from '../../assets/img/mob/sea-mob-1x.jpg';\nimport SeaMobX2 from '../../assets/img/mob/sea-mob-2x.jpg';\nimport StarsDesk from '../../assets/img/desk/stars-desk-1x.jpg';\nimport StarsDeskX2 from '../../assets/img/desk/stars-desk-2x.jpg';\nimport StarsTab from '../../assets/img/tab/stars-tab-1x.jpg';\nimport StarsTabX2 from '../../assets/img/tab/stars-tab-2x.jpg';\nimport StarsMob from '../../assets/img/mob/stars-mob-1x.jpg';\nimport StarsMobX2 from '../../assets/img/mob/stars-mob-2x.jpg';\nimport TreeDesk from '../../assets/img/desk/tree-desk-1x.jpg';\nimport TreeDeskX2 from '../../assets/img/desk/tree-desk-2x.jpg';\nimport TreeTab from '../../assets/img/tab/tree-tab-1x.jpg';\nimport TreeTabX2 from '../../assets/img/tab/tree-tab-2x.jpg';\nimport TreeMob from '../../assets/img/mob/tree-mob-1x.jpg';\nimport TreeMobX2 from '../../assets/img/mob/tree-mob-2x.jpg';\nimport YachtDesk from '../../assets/img/desk/yacht-desk-1x.jpg';\nimport YachtDeskX2 from '../../assets/img/desk/yacht-desk-2x.jpg';\nimport YachtTab from '../../assets/img/tab/yacht-tab-1x.jpg';\nimport YachtTabX2 from '../../assets/img/tab/yacht-tab-2x.jpg';\nimport YachtMob from '../../assets/img/mob/yacht-mob-1x.jpg';\nimport YachtMobX2 from '../../assets/img/mob/yacht-mob-2x.jpg';\n\nexport const handleBackgroundChange = background => {\n  switch (background) {\n    case 'abstract':\n      return {\n        desk: AbstractDesk,\n        deskx2: AbstractDeskX2,\n        tab: AbstractTab,\n        tabx2: AbstractTabX2,\n        mob: AbstractMob,\n        mobx2: AbstractMobX2,\n      };\n    case 'air':\n      return {\n        desk: AirDesk,\n        deskx2: AirDeskX2,\n        tab: AirTab,\n        tabx2: AirTabX2,\n        mob: AirMob,\n        mobx2: AirMobX2,\n      };\n    case 'ballons':\n      return {\n        desk: BallonsDesk,\n        deskx2: BallonsDeskX2,\n        tab: BallonsTab,\n        tabx2: BallonsTabX2,\n        mob: BallonsMob,\n        mobx2: BallonsMobX2,\n      };\n    case 'canyon':\n      return {\n        desk: CanyonDesk,\n        deskx2: CanyonDeskX2,\n        tab: CanyonTab,\n        tabx2: CanyonTabX2,\n        mob: CanyonMob,\n        mobx2: CanyonMobX2,\n      };\n    case 'clouds':\n      return {\n        desk: CloudsDesk,\n        deskx2: CloudsDeskX2,\n        tab: CloudsTab,\n        tabx2: CloudsTabX2,\n        mob: CloudsMob,\n        mobx2: CloudsMobX2,\n      };\n    case 'magnolia':\n      return {\n        desk: MagnoliaDesk,\n        deskx2: MagnoliaDeskX2,\n        tab: MagnoliaTab,\n        tabx2: MagnoliaTabX2,\n        mob: MagnoliaMob,\n        mobx2: MagnoliaMobX2,\n      };\n    case 'milkyway':\n      return {\n        desk: MilkywayDesk,\n        deskx2: MilkywayDeskX2,\n        tab: MilkywayTab,\n        tabx2: MilkywayTabX2,\n        mob: MilkywayMob,\n        mobx2: MilkywayMobX2,\n      };\n    case 'moon':\n      return {\n        desk: MoonDesk,\n        deskx2: MoonDeskX2,\n        tab: MoonTab,\n        tabx2: MoonTabX2,\n        mob: MoonMob,\n        mobx2: MoonMobX2,\n      };\n    case 'night':\n      return {\n        desk: NightDesk,\n        deskx2: NightDeskX2,\n        tab: NightTab,\n        tabx2: NightTabX2,\n        mob: NightMob,\n        mobx2: NightMobX2,\n      };\n    case 'palm':\n      return {\n        desk: PalmDesk,\n        deskx2: PalmDeskX2,\n        tab: PalmTab,\n        tabx2: PalmTabX2,\n        mob: PalmMob,\n        mobx2: PalmMobX2,\n      };\n    case 'rocks':\n      return {\n        desk: RocksDesk,\n        deskx2: RocksDeskX2,\n        tab: RocksTab,\n        tabx2: RocksTabX2,\n        mob: RocksMob,\n        mobx2: RocksMobX2,\n      };\n    case 'sea':\n      return {\n        desk: SeaDesk,\n        deskx2: SeaDeskX2,\n        tab: SeaTab,\n        tabx2: SeaTabX2,\n        mob: SeaMob,\n        mobx2: SeaMobX2,\n      };\n    case 'stars':\n      return {\n        desk: StarsDesk,\n        deskx2: StarsDeskX2,\n        tab: StarsTab,\n        tabx2: StarsTabX2,\n        mob: StarsMob,\n        mobx2: StarsMobX2,\n      };\n    case 'tree':\n      return {\n        desk: TreeDesk,\n        deskx2: TreeDeskX2,\n        tab: TreeTab,\n        tabx2: TreeTabX2,\n        mob: TreeMob,\n        mobx2: TreeMobX2,\n      };\n    case 'yacht':\n      return {\n        desk: YachtDesk,\n        deskx2: YachtDeskX2,\n        tab: YachtTab,\n        tabx2: YachtTabX2,\n        mob: YachtMob,\n        mobx2: YachtMobX2,\n      };\n    default:\n      return {\n        desk: '',\n        deskx2: '',\n        tab: '',\n        tabx2: '',\n        mob: '',\n        mobx2: '',\n      };\n  }\n};\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;\nexport const selectIsLoading = state => state.boards.isLoading;\nexport const selectOneBoard = state => state.boards.oneBoard;\nexport const selectBackgroundIcons = state => state.boards.background;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h4","_templateObject2","ConfirmButton","button","_templateObject3","_ref","onClose","onConfirm","_jsx","Modal","width","height","children","_jsxs","type","onClick","handleConfirm","Opacity","Modalcont","$Width","ModalClose","developers","modalRoot","document","getElementById","useEffect","handleCloseKeyPress","event","code","addEventListener","removeEventListener","createPortal","$developers","$Height","stopPropagation","Icon","strokeColor","name","PRIORITY_LIST","priority","color","ICONS_ARRAY","id","label","BACKGROUND_LIST","TOASTER","style","border","backgroundColor","textAlign","position","duration","onFilterChange","selectedValue","setSelectedValue","useState","radio","value","labelColor","radioColor","static","onChecked","Box","sx","display","flexDirection","alignItems","RadioGroup","onChange","selectedPriority","target","gap","map","FormControlLabel","margin","fontFamily","fontSize","control","Radio","disableRipple","FilterWrapper","p","Line","hr","TitleWrapper","_templateObject4","LabelTitle","_templateObject5","ShowAllButton","_templateObject6","dispatch","useDispatch","setPriority","resetFilter","setFilter","RadioFilter","ContainerHeaderBoard","TitleVilter","FilterText","FilterButton","FilterDiv","ContainerFilter","HeaderDashboard","currentBoard","useSelector","selectCurrentBoard","title","openFilter","setOpenFilter","toggleFilter","handleOpenFilter","fillColor","open","Filter","DivForColumns","ul","Column","li","TitleColumnDiv","SvgDiv","Button","Icons","svg","ButtonForCard","_templateObject7","IconDoCard","_templateObject8","Plus","use","_templateObject9","TextBtn","_templateObject10","Modalform","form","ModalTitle","h2","TitleInput","input","Textarea","textarea","Text","TextAdd","PriorityDiv","ButtonSend","PlusButton","_templateObject11","IconWrap","_templateObject12","padding","ButtonSvg","StyledDatePickerContainer","date","changeDate","CustomInput","forwardRef","_ref2","ref","Styled","DatePicker","className","selected","minDate","Date","dateFormat","today","getDate","getMonth","getFullYear","dateFormatChange","customInput","columnId","showModal","setTitle","description","setDescription","cardPriority","setCardPriority","deadline","setDeadline","board","modalWidth","setModalWidth","updateModalWidth","window","innerWidth","onSubmit","e","preventDefault","newCard","trim","addCardThunk","boardId","_id","body","error","message","required","placeholder","CardPriorityList","Calendar","onColumnUpdate","newTitle","setNewTitle","_Fragment","async","evt","editColumn","updateColumnThunk","selectCards","state","cards","Card","TextCard","CardsColor","CardDiv","CardsText","CardsParams","Wrap","PriorityTitle","ColorCard","ColorCardText","DeadlineDiv","_templateObject13","DeadlineTitle","_templateObject14","DeadlineDate","_templateObject15","SvgContainer","_templateObject16","ParamsButtons","_templateObject17","ButtonsIcon","_templateObject18","ButtonsIconBell","_templateObject19","formatDate","inputDate","day","getUTCDate","month","getUTCMonth","getUTCFullYear","cardData","data","updateCardThunk","cardId","Popup","BtnPop","allColumns","moveCard","filter","column","concat","_PRIORITY_LIST$find","card","onDelete","currentDate","setCurrentDate","interval","setInterval","clearInterval","deadlineDate","priorityColor","find","item","isDeleteModalShown","setIsDeleteModalShown","showCardEditModal","setShowCardEditModal","showCardMoveModal","setShowCardMoveModal","toggleCardMoveModal","prevShowModal","date1","date2","href","sprite","MovePopUp","newColumn","moveCardThunk","toggleCardEditModal","CardEditModal","DeleteModal","CardContainer","getFilter","columnCards","filteredCards","_ref3","toLowerCase","getAllCardsThunk","length","TasksCard","handleDeleteCard","getCardByIdThunk","then","_ref4","payload","deleteCardThunk","onDeleteColumn","columnTitle","setColumnTitle","showAddCardModal","setShowAddCardModal","showEditColumnModal","setShowEditColumnModal","showDeleteModal","setshowDeleteModal","toggleEditColumnModal","TasksCardList","toggleAddCardModal","CardAddModal","EditColumnModal","selectСolumns","columns","TasksColumn","getAllColumnsThunk","TasksColumnItem","getColumnByIdThunk","colunmId","deleteColumnThunk","handleDeleteColumn","addColumnThunk","action","ButtonForColumn","setShowModal","toggleModal","ColumnModal","ContainerMainBoard","MainDashboard","ContainerScreensPage","props","backgroundImage","desk","deskx2","mob","mobx2","tab","tabx2","ScreensPage","boards","selectBoards","useParams","getBoardByIdThunk","background","AbstractDesk","AbstractDeskX2","AbstractTab","AbstractTabX2","AbstractMobX2","AirDesk","AirDeskX2","AirTab","AirTabX2","AirMob","AirMobX2","BallonsDesk","BallonsDeskX2","BallonsTab","BallonsTabX2","BallonsMob","BallonsMobX2","CanyonDesk","CanyonDeskX2","CanyonTab","CanyonTabX2","CanyonMob","CanyonMobX2","CloudsDesk","CloudsDeskX2","CloudsTab","CloudsTabX2","CloudsMobX2","MagnoliaDesk","MagnoliaDeskX2","MagnoliaTab","MagnoliaTabX2","MagnoliaMob","MagnoliaMobX2","MilkywayDesk","MilkywayDeskX2","MilkywayTab","MilkywayTabX2","MilkywayMob","MilkywayMobX2","MoonDesk","MoonDeskX2","MoonTab","MoonTabX2","MoonMob","MoonMobX2","NightDesk","NightDeskX2","NightTabX2","NightMobX2","PalmDesk","PalmDeskX2","PalmTab","PalmTabX2","PalmMob","PalmMobX2","RocksDesk","RocksDeskX2","RocksTab","RocksTabX2","RocksMob","RocksMobX2","SeaDesk","SeaDeskX2","SeaTab","SeaTabX2","SeaMob","SeaMobX2","StarsDesk","StarsDeskX2","StarsTab","StarsTabX2","StarsMob","StarsMobX2","TreeDesk","TreeDeskX2","TreeTab","TreeTabX2","TreeMob","TreeMobX2","YachtDesk","YachtDeskX2","YachtTab","YachtTabX2","YachtMob","YachtMobX2","handleBackgroundChange","selectIsLoading","isLoading"],"sourceRoot":""}